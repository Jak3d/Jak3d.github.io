{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../../immagini/SO/img1_1.png';\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<h3 id=\\\"1\\\" class=\\\"subtitle is-3\\\"> Cos&#39;è un sistema operativo? (Lez. 1)</h3><h4 class=\\\"subtitle is-5\\\" id=\\\"1-1\\\">Libri</h4><p> Sistemi Operativi concetti ed esempi di Silver Shatz </p><h4 class=\\\"subtitle is-5\\\" id=\\\"1-2\\\">Cos&#39;è un SO</h4><p> Il sistema operativo è il componente <strong> Software </strong> del computer , senza tale dispositivo, il computer sarebbe una macchina <strong>Hardware</strong>. Un esempio di un computer senza SO fu <strong>Eniac</strong>. </p><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"\\\" style=\\\"transform:scale(0.70);\\\"><p> Il Sistema operativo gestisce/controlla due principali elementi: <strong> Risorse</strong> e <strong> Controlli</strong></p><p> Le <strong> Risorse </strong> gestite sono: </p><ol><li>Risorse HW (Ram, I/O)</li><li>Risorse SW (File, Code di messaggi, Processi)</li><li>Tempo</li></ol><p> I <strong> Controlli</strong> gestiti sono: <ol><li>Programmi</li><li>Sicurezza</li></ol></p><h3 class=\\\"subtitle is-3 is-centered\\\">Concetti Fondamentali</h3><p> Negli anni &#39;50 nacque il <strong> Primo</strong> SO: <span class=\\\"tag is-info\\\"> IBM SERIE 701</span> Esistono due tipi di processamento input: <strong> SINGLE STREAM</strong> e <strong> BATCH PROCESSING</strong> System (Disegno 1.2) </p><p>Un programma da eseguire è una <strong>Stringa di Istruzioni</strong></p><p>&quot;i&quot; di INPUT (Leggo dato da memoria senza utilizzare la CPU)</p><p>&quot;i&quot; di OUTPUT (Scrivo dato in memoria senza utilizzare la CPU)</p><p>Durante tutto questio persiodo di I/O la CPU rimane <strong>Inattiva</strong>. </p><p>(Disegno 1.3)</p><h3 class=\\\"subtitle is-3\\\"> SO a 2 Jobs</h3><p> Con l&#39;evoluzione della tecnologia si iniziò a caricare 2 Jobs contemporaneamente per sfruttare al meglio la CPU. </p><p>L&#39;SO iniziò a tenere memorizzato il dato di <ins>Chi ha accesso alla CPU</ins>. L&#39;SO de-allocherà la CPU al Job in esecuzione nel momento in cui smetterà di utilizzarla ; in quello stesso momento dedicherà la CPU ad un ulteriore Job che ne necessita.</p><p>Nasce <strong>L&#39;INTERLINING DELLE ISTRUZIONI</strong> (&quot;Infogliamento&quot;)</p><h3 class=\\\"subtitle is-3\\\"> Time-Sharing</h3><p>Con l&#39;avvenire degli anni &#39;60 vennero inventati computer composti da <strong>1 Elaboratore &amp; + Operatori &amp; +Terminali</strong> (Unità I/O)</p><p>Nasce il concetto di <span class=\\\"tag is-info\\\"> File</span></p><p>La nascita del file comporta la nascita di problemi di <strong>Visibilità</strong>.</p><h3 class=\\\"subtitle is-3\\\">Nascita del Personal Computer</h3><p>Negli anni &#39;70 nacque il primo personal computer, la cui nascita rese <strong>Inutile</strong> i sistemi di protezione interni (c&#39;era un singolo utente).</p><h3 class=\\\"subtitle is-3\\\"></h3>\", 28);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_mathjax = _resolveComponent(\"vue-mathjax\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", null, [_createVNode(_component_vue_mathjax, {\n    formula: $data.formula\n  }, null, 8, [\"formula\"])])]);\n}","map":{"version":3,"mappings":";OAeaA,gBAAkC;;;;;;;uBAd3CC,oBAmEM,KAnEN,EAmEM,IAnEN,EAmEM,CAjEFC,UAiEE,EAHFC,oBAEI,GAFJ,EAEI,IAFJ,EAEI,CADAC,aAA8CC,sBAA9C,EAA8C;IAAhCC,OAAO,EAAEC;EAAuB,CAA9C,EAA8B,IAA9B,EAA8B,CAA9B,EAA8B,WAA9B,CACA,CAFJ,CAGE,CAnEN","names":["_imports_0","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_vue_mathjax","formula","$data"],"sourceRoot":"","sources":["C:\\Users\\marro\\Documents\\GitHub\\LeonardoMarro\\src\\components\\SistemiOperativi.vue"],"sourcesContent":["<template >\r\n    <div>\r\n\r\n        <h3  id=\"1\" class=\"subtitle is-3\"> Cos'è un sistema operativo? (Lez. 1)</h3>\r\n        <h4 class=\"subtitle is-5\" id=\"1-1\">Libri</h4>\r\n        <p>\r\n            Sistemi Operativi concetti ed esempi di Silver Shatz\r\n        </p>\r\n        <h4 class=\"subtitle is-5\" id=\"1-2\">Cos'è un SO</h4>\r\n        <p>\r\n            Il sistema operativo è il componente <strong> Software </strong> del computer , senza tale dispositivo, il\r\n            computer\r\n            sarebbe una macchina <strong>Hardware</strong>. Un esempio di un computer senza SO fu\r\n            <strong>Eniac</strong>.\r\n        </p>\r\n        <img src=\"../../immagini/SO/img1_1.png\" alt=\"\" style=\"transform:scale(0.70)\">\r\n        <p>\r\n            Il Sistema operativo gestisce/controlla due principali elementi: <strong> Risorse</strong> e <strong>\r\n                Controlli</strong>\r\n        </p>\r\n        <p>\r\n            Le <strong> Risorse </strong> gestite sono:\r\n        </p>\r\n        <ol>\r\n            <li>Risorse HW (Ram, I/O)</li>\r\n            <li>Risorse SW (File, Code di messaggi, Processi)</li>\r\n            <li>Tempo</li>\r\n        </ol>\r\n        <p>\r\n            I <strong> Controlli</strong> gestiti sono:\r\n        <ol>\r\n            <li>Programmi</li>\r\n            <li>Sicurezza</li>\r\n        </ol>\r\n        </p>\r\n        <h3 class=\"subtitle is-3 is-centered\">Concetti Fondamentali</h3>\r\n        <p>\r\n            Negli anni '50 nacque il <strong> Primo</strong> SO: <span class=\"tag is-info\"> IBM SERIE 701</span>\r\n            Esistono due tipi di processamento input: <strong> SINGLE STREAM</strong> e <strong> BATCH\r\n                PROCESSING</strong> System\r\n            (Disegno 1.2)\r\n        </p>\r\n        <p>Un programma da eseguire è una <strong>Stringa di Istruzioni</strong> </p>\r\n        <p>\"i\" di INPUT (Leggo dato da memoria senza utilizzare la CPU)</p>\r\n        <p>\"i\" di OUTPUT (Scrivo dato in memoria senza utilizzare la CPU)</p>\r\n        <p>Durante tutto questio persiodo di I/O la CPU rimane <strong>Inattiva</strong>. </p>\r\n        <p>(Disegno 1.3)</p>\r\n        <h3 class=\"subtitle is-3\"> SO a 2 Jobs</h3>\r\n        <p> Con l'evoluzione della tecnologia si iniziò a caricare 2 Jobs contemporaneamente per sfruttare al meglio la\r\n            CPU. </p>\r\n        <p>L'SO iniziò a tenere memorizzato il dato di <ins>Chi ha accesso alla CPU</ins>. L'SO de-allocherà la CPU al\r\n            Job in esecuzione nel momento in cui smetterà di utilizzarla\r\n            ; in quello stesso momento dedicherà la CPU ad un ulteriore Job che ne necessita.</p>\r\n        <p>Nasce <strong>L'INTERLINING DELLE ISTRUZIONI</strong> (\"Infogliamento\")</p>\r\n        <h3 class=\"subtitle is-3\"> Time-Sharing</h3>\r\n        <p>Con l'avvenire degli anni '60 vennero inventati computer composti da <strong>1 Elaboratore & + Operatori &\r\n                +Terminali</strong> (Unità I/O)</p>\r\n        <p>Nasce il concetto di <span class=\"tag is-info\"> File</span></p>\r\n        <p>La nascita del file comporta la nascita di problemi di <strong>Visibilità</strong>.</p>\r\n        <h3 class=\"subtitle is-3\">Nascita del Personal Computer</h3>\r\n        <p>Negli anni '70 nacque il primo personal computer, la cui nascita rese <strong>Inutile</strong> i sistemi di\r\n            protezione interni (c'era un singolo utente).</p>\r\n        <h3 class=\"subtitle is-3\"></h3>\r\n\r\n\r\n        <p>\r\n            <vue-mathjax :formula=\"formula\"></vue-mathjax>\r\n        </p>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { VueMathjax } from \"vue-mathjax-next\";\r\n\r\nexport default {\r\n    name: 'SistemiOperativi',\r\n    components: {\r\n        \"vue-mathjax\": VueMathjax,\r\n    },\r\n    data() {\r\n        return {\r\n            formula: \"$$x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}.$$\",\r\n        }\r\n    },\r\n    methods: {\r\n        jump(h) {\r\n            document.getElementById(h).scrollIntoView({block:\"nearest\", behavior:\"smooth\"});\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\nli {\r\n    text-align: left;\r\n}\r\nh3{\r\n    background-color: aliceblue;\r\n    width: fit-content;\r\n    padding: 2px;\r\n    margin-top: 10px;\r\n}\r\nh4{\r\n    background-color: whitesmoke;\r\n    width: fit-content;\r\n    padding: 2px;\r\n    margin-top: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}